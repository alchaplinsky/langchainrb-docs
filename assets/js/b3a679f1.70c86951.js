"use strict";(self.webpackChunklangchain=self.webpackChunklangchain||[]).push([[4669],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},p=Object.keys(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),m=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=m(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,p=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=m(n),f=a,d=u["".concat(i,".").concat(f)]||u[f]||c[f]||p;return n?r.createElement(d,o(o({ref:t},s),{},{components:n})):r.createElement(d,o({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var p=n.length,o=new Array(p);o[0]=f;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var m=2;m<p;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5905:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>c,frontMatter:()=>p,metadata:()=>l,toc:()=>m});var r=n(7462),a=(n(7294),n(3905));const p={sidebar_position:2},o="Usage",l={unversionedId:"prompts/usage",id:"prompts/usage",title:"Usage",description:"Prompt Templates",source:"@site/docs/prompts/usage.md",sourceDirName:"prompts",slug:"/prompts/usage",permalink:"/langchainrb-docs/docs/prompts/usage",draft:!1,editUrl:"https://github.com/alchaplinsky/lcrb/tree/main/packages/create-docusaurus/templates/shared/docs/prompts/usage.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/langchainrb-docs/docs/prompts/intro"},next:{title:"Preparing Data",permalink:"/langchainrb-docs/docs/category/preparing-data"}},i={},m=[{value:"Prompt Templates",id:"prompt-templates",level:2},{value:"Few Shot Prompt Templates",id:"few-shot-prompt-templates",level:2}],s={toc:m},u="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"usage"},"Usage"),(0,a.kt)("h2",{id:"prompt-templates"},"Prompt Templates"),(0,a.kt)("p",null,"Create a prompt with one input variable:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},'prompt = Langchain::Prompt::PromptTemplate.new(\n  template: "Tell me a {adjective} joke.",\n  input_variables: ["adjective"]\n)\nprompt.format(adjective: "funny") # "Tell me a funny joke."\n')),(0,a.kt)("p",null,"Create a prompt with multiple input variables:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},'prompt = Langchain::Prompt::PromptTemplate.new(\n  template: "Tell me a {adjective} joke about {content}.",\n  input_variables: ["adjective", "content"]\n)\nprompt.format(adjective: "funny", content: "chickens") # "Tell me a funny joke about chickens."\n')),(0,a.kt)("p",null,"Creating a PromptTemplate using just a prompt and no input_variables:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},'prompt = Langchain::Prompt::PromptTemplate.from_template("Tell me a funny joke about chickens.")\nprompt.input_variables # []\nprompt.format # "Tell me a funny joke about chickens."\n')),(0,a.kt)("p",null,"Save prompt template to JSON file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},'prompt.save(file_path: "spec/fixtures/prompt/prompt_template.json")\n')),(0,a.kt)("p",null,"Loading a new prompt template using a JSON file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},'prompt = Langchain::Prompt.load_from_path(file_path: "spec/fixtures/prompt/prompt_template.json")\nprompt.input_variables # ["adjective", "content"]\n')),(0,a.kt)("h2",{id:"few-shot-prompt-templates"},"Few Shot Prompt Templates"),(0,a.kt)("p",null,"Create a prompt with a few shot examples:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},'prompt = Langchain::Prompt::FewShotPromptTemplate.new(\n  prefix: "Write antonyms for the following words.",\n  suffix: "Input: {adjective}\\nOutput:",\n  example_prompt: Langchain::Prompt::PromptTemplate.new(\n    input_variables: ["input", "output"],\n    template: "Input: {input}\\nOutput: {output}"\n  ),\n  examples: [\n    { "input": "happy", "output": "sad" },\n    { "input": "tall", "output": "short" }\n  ],\n   input_variables: ["adjective"]\n)\n\nprompt.format(adjective: "good")\n\n# Write antonyms for the following words.\n#\n# Input: happy\n# Output: sad\n#\n# Input: tall\n# Output: short\n#\n# Input: good\n# Output:\n')),(0,a.kt)("p",null,"Save prompt template to JSON file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},'prompt.save(file_path: "spec/fixtures/prompt/few_shot_prompt_template.json")\n')),(0,a.kt)("p",null,"Loading a new prompt template using a JSON file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},'prompt = Langchain::Prompt.load_from_path(file_path: "spec/fixtures/prompt/few_shot_prompt_template.json")\nprompt.prefix # "Write antonyms for the following words."\n')),(0,a.kt)("p",null,"Loading a new prompt template using a YAML file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},'prompt = Langchain::Prompt.load_from_path(file_path: "spec/fixtures/prompt/prompt_template.yaml")\nprompt.input_variables #=> ["adjective", "content"]\n')))}c.isMDXComponent=!0}}]);