"use strict";(self.webpackChunklangchain=self.webpackChunklangchain||[]).push([[1360],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=c(a),m=r,u=d["".concat(p,".").concat(m)]||d[m]||g[m]||l;return a?n.createElement(u,i(i({ref:t},s),{},{components:a})):n.createElement(u,i({ref:t},s))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4695:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const l={sidebar_position:2},i="Usage",o={unversionedId:"agents/usage",id:"agents/usage",title:"Usage",description:"ReAct Agent",source:"@site/docs/agents/usage.md",sourceDirName:"agents",slug:"/agents/usage",permalink:"/langchainrb-docs/docs/agents/usage",draft:!1,editUrl:"https://github.com/alchaplinsky/lcrb/tree/main/packages/create-docusaurus/templates/shared/docs/agents/usage.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/langchainrb-docs/docs/agents/intro"}},p={},c=[{value:"ReAct Agent",id:"react-agent",level:2},{value:"SQL-Query Agent",id:"sql-query-agent",level:2},{value:"Demo",id:"demo",level:2},{value:"Available Tools \ud83d\udee0\ufe0f",id:"available-tools-\ufe0f",level:2}],s={toc:c},d="wrapper";function g(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"usage"},"Usage"),(0,r.kt)("h2",{id:"react-agent"},"ReAct Agent"),(0,r.kt)("p",null,"Add ",(0,r.kt)("inlineCode",{parentName:"p"},'gem "ruby-openai"'),", ",(0,r.kt)("inlineCode",{parentName:"p"},'gem "eqn"'),", and ",(0,r.kt)("inlineCode",{parentName:"p"},'gem "google_search_results"')," to your Gemfile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},'search_tool = Langchain::Tool::GoogleSearch.new(api_key: ENV["SERPAPI_API_KEY"])\ncalculator = Langchain::Tool::Calculator.new\n\nopenai = Langchain::LLM::OpenAI.new(api_key: ENV["OPENAI_API_KEY"])\n\nagent = Langchain::Agent::ReActAgent.new(\n  llm: openai,\n  tools: [search_tool, calculator]\n)\n\nagent.tools\n# => ["google_search", "calculator"]\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},'agent.run(question: "How many full soccer fields would be needed to cover the distance between NYC and DC in a straight line?")\n#=> "Approximately 2,945 soccer fields would be needed to cover the distance between NYC and DC in a straight line."\n')),(0,r.kt)("h2",{id:"sql-query-agent"},"SQL-Query Agent"),(0,r.kt)("p",null,"Add ",(0,r.kt)("inlineCode",{parentName:"p"},'gem "sequel"')," to your Gemfile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},'database = Langchain::Tool::Database.new(connection_string: "postgres://user:password@localhost:5432/db_name")\n\nagent = Langchain::Agent::SQLQueryAgent.new(llm: Langchain::LLM::OpenAI.new(api_key: ENV["OPENAI_API_KEY"]), db: database)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},'agent.run(question: "How many users have a name with length greater than 5 in the users table?")\n#=> "14 users have a name with length greater than 5 in the users table."\n')),(0,r.kt)("h2",{id:"demo"},"Demo"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/andreibondarev/langchainrb/assets/541665/6bad4cd9-976c-420f-9cf9-b85bf84f7eaf",alt:"May-12-2023 13-09-13"})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/andreibondarev/langchainrb/assets/541665/9aacdcc7-4225-4ea0-ab96-7ee48826eb9b",alt:"May-12-2023 13-07-45"})),(0,r.kt)("h2",{id:"available-tools-\ufe0f"},"Available Tools \ud83d\udee0\ufe0f"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"center"},"ENV Requirements"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Gem Requirements"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"calculator"'),(0,r.kt)("td",{parentName:"tr",align:"center"},"Useful for getting the result of a math expression"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'gem "eqn", "~> 1.6.5"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"database"'),(0,r.kt)("td",{parentName:"tr",align:"center"},"Useful for querying a SQL database"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'gem "sequel", "~> 5.68.0"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"ruby_code_interpreter"'),(0,r.kt)("td",{parentName:"tr",align:"center"},"Interprets Ruby expressions"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'gem "safe_ruby", "~> 1.0.4"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"google_search"'),(0,r.kt)("td",{parentName:"tr",align:"center"},"A wrapper around Google Search"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'ENV["SERPAPI_API_KEY"]')," (",(0,r.kt)("a",{parentName:"td",href:"https://serpapi.com/manage-api-key"},"https://serpapi.com/manage-api-key"),")"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'gem "google_search_results", "~> 2.0.0"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"weather"'),(0,r.kt)("td",{parentName:"tr",align:"center"},"Calls Open Weather API to retrieve the current weather"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'ENV["OPEN_WEATHER_API_KEY]')," (",(0,r.kt)("a",{parentName:"td",href:"https://home.openweathermap.org/api_keys"},"https://home.openweathermap.org/api_keys"),")"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'gem "open-weather-ruby-client", "~> 0.3.0"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"wikipedia"'),(0,r.kt)("td",{parentName:"tr",align:"center"},"Calls Wikipedia API to retrieve the summary"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'gem "wikipedia-client", "~> 1.17.0"'))))))}g.isMDXComponent=!0}}]);